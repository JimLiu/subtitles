1
00:00:05,000 --> 00:00:08,160
In this video, we'll put together everything we've learned in the previous videos to create

2
00:00:08,160 --> 00:00:11,200
an end-to-end example of a customer service assistant.

3
00:00:11,200 --> 00:00:12,520
We'll go through the following steps.

4
00:00:12,520 --> 00:00:16,000
First, we'll check the input to see if it flags the moderation API.

5
00:00:16,000 --> 00:00:20,000
Second, if it doesn't, we'll extract the list of products.

6
00:00:20,000 --> 00:00:23,280
Third, if the products are found, we'll try to look them up.

7
00:00:23,280 --> 00:00:26,880
And four, we'll answer the user question with the model.

8
00:00:26,880 --> 00:00:31,080
And finally, we'll put the answer through the moderation API.

9
00:00:31,080 --> 00:00:34,760
And if it is not flagged, we'll return it to the user.

10
00:00:34,760 --> 00:00:36,820
So we have our setup.

11
00:00:36,820 --> 00:00:39,320
We have this additional import.

12
00:00:39,320 --> 00:00:47,240
This is a Python package we'll use for a chatbot UI.

13
00:00:47,240 --> 00:00:51,760
And so I'm going to paste in a function process_user_message.

14
00:00:51,760 --> 00:00:58,960
And I'm actually going to run an example first, and then we'll talk through the function.

15
00:00:58,960 --> 00:01:01,920
So we have our user input that we've been using.

16
00:01:01,920 --> 00:01:05,040
Tell me about the SmartX pro phone and the camera.

17
00:01:05,040 --> 00:01:06,800
Also tell me about TVs.

18
00:01:06,800 --> 00:01:07,800
So let's run this.

19
00:01:07,800 --> 00:01:12,640
First, let's run this.

20
00:01:12,640 --> 00:01:20,680
So as you can see, we're going through the steps to answer the user question.

21
00:01:20,680 --> 00:01:24,560
So the first step, the moderation step.

22
00:01:24,560 --> 00:01:27,480
The second step is extracting the list of products.

23
00:01:27,480 --> 00:01:31,880
The third step is looking up the product information.

24
00:01:31,880 --> 00:01:39,560
And so now with this product information, the model is trying to answer the question,

25
00:01:39,560 --> 00:01:46,360
as we've seen in the previous videos.

26
00:01:46,360 --> 00:01:53,680
And then finally, it puts the response through the moderation API again to make sure it's safe to show to the user.

27
00:01:53,680 --> 00:01:58,120
And so this is the response that we're now familiar with.

28
00:01:58,120 --> 00:02:01,800
And so let's talk through a little bit of what's happening.

29
00:02:01,800 --> 00:02:09,320
So we have our helper function process_user_message.

30
00:02:09,320 --> 00:02:16,640
Takes in the user input, which is the current message, and an array of all of the messages so far.

31
00:02:16,640 --> 00:02:18,920
And this is when we build the chatbot UI.

32
00:02:18,920 --> 00:02:23,280
So the first step, checking to see if the input flags the moderation API.

33
00:02:23,280 --> 00:02:25,600
We covered this in a previous video.

34
00:02:25,600 --> 00:02:32,240
If the input is flagged, then we tell the user that we can't process the request.

35
00:02:32,240 --> 00:02:37,840
If it is not flagged, we try to extract the list of products, as we did in the previous video.

36
00:02:37,840 --> 00:02:40,800
Then we try to look up the products.

37
00:02:40,800 --> 00:02:45,320
And in this case, if no products are found, this will just be an empty string.

38
00:02:45,320 --> 00:02:47,080
Then we answer the user question.

39
00:02:47,080 --> 00:02:52,000
So we give the conversation history and the new messages with the relevant product information.

40
00:02:52,000 --> 00:02:54,360
So we get the response.

41
00:02:54,360 --> 00:02:56,960
And then we run this response through the moderation API.

42
00:02:56,960 --> 00:03:04,160
If it's flagged, we tell the user that we can't provide this information.

43
00:03:04,160 --> 00:03:06,720
Maybe we'll say something, "Let me connect you to a human."

44
00:03:06,720 --> 00:03:09,320
And you could take some subsequent step.

45
00:03:09,320 --> 00:03:15,560
And so let's put this all together with a nice UI and try to have a conversation.

46
00:03:15,560 --> 00:03:22,200
So here we have a function that will just accumulate the messages as we interact with the assistant.

47
00:03:22,200 --> 00:03:26,960
And feel free to pause the video to understand in more detail how this works.

48
00:03:26,960 --> 00:03:31,160
And of course, feel free to do the same for the really long process user message function

49
00:03:31,160 --> 00:03:33,560
that we just saw as well.

50
00:03:33,560 --> 00:03:40,080
So now we're going to paste in our code to display the chatbot UI.

51
00:03:40,080 --> 00:03:46,800
So if we run this, now let's try and have a conversation with the customer service assistant.

52
00:03:46,800 --> 00:03:54,200
So let's ask, "What TVs do you have?"

53
00:03:54,200 --> 00:04:00,840
And under the hood, the assistant is going through all of the steps in the process user message function.

54
00:04:00,840 --> 00:04:03,960
So it's listed a variety of different TVs.

55
00:04:03,960 --> 00:04:08,440
So now let's ask, "Which is the cheapest?"

56
00:04:08,440 --> 00:04:20,360
Again, it's going through all the same steps, but this time it's passing the conversation history as well into the prompts.

57
00:04:20,360 --> 00:04:26,920
Okay, so it's telling us that this speaker is the cheapest TV-related product we have.

58
00:04:26,920 --> 00:04:27,920
Interesting.

59
00:04:28,000 --> 00:04:29,840
Let's see what the most expensive is.

60
00:04:29,840 --> 00:04:40,800
So the most expensive TV is the Cineview 8K TV.

61
00:04:40,800 --> 00:04:43,360
So let's ask for more information about it.

62
00:04:43,360 --> 00:04:46,600
Tell me more about it.

63
00:04:46,600 --> 00:04:54,800
And so we've received some more information about this television.

64
00:04:54,800 --> 00:05:00,400
So in this example, we've combined the techniques we've learned throughout the course to create

65
00:05:00,400 --> 00:05:05,640
a comprehensive system with a chain of steps that evaluates user inputs, processes them,

66
00:05:05,640 --> 00:05:07,560
and then checks the output.

67
00:05:07,560 --> 00:05:10,844
By monitoring the quality of the system across a larger number of inputs,

68
00:05:10,845 --> 00:05:15,240
you can alter the steps and improve the overall performance of your system.

69
00:05:15,240 --> 00:05:19,080
Maybe we might find that our prompts could be better for some of the steps.

70
00:05:19,080 --> 00:05:21,360
Maybe some of the steps aren't even necessary.

71
00:05:21,360 --> 00:05:24,960
You will find a better retrieval method, and so on.

72
00:05:24,960 --> 00:05:26,160
We'll discuss this more in the next video.

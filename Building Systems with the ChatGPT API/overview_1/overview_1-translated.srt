1
00:00:00,000 --> 00:00:04,880
欢迎参加关于使用ChatGPT API构建系统的课程。

2
00:00:04,880 --> 00:00:09,920
之前，Isa和我介绍了如何提示（Prompt）ChatGPT的课程。

3
00:00:09,920 --> 00:00:16,160
但是一个系统需要的远不止一个提示（Prompt）或一个对LLM（大型语言模型）的调用。

4
00:00:16,160 --> 00:00:23,680
在这个短期课程中，我们想和您分享使用LLM构建复杂应用程序的最佳实践。

5
00:00:23,680 --> 00:00:30,400
我们将以构建一个端到端的客户服务辅助系统为例，该系统将多个调用链接到语言模型，

6
00:00:30,400 --> 00:00:36,960
根据前一个调用的输出使用不同的指令，有时甚至从外部来源查找信息。

7
00:00:36,960 --> 00:00:44,960
例如，对于用户输入的“告诉我有哪些电视出售”，我们将使用以下步骤来处理。

8
00:00:44,960 --> 00:00:52,320
首先，您可以评估输入以确保其不包含任何有问题的内容，例如仇恨言论。

9
00:00:52,320 --> 00:00:57,040
接下来，系统将处理输入。它将确定这是哪种类型的查询。

10
00:00:57,040 --> 00:01:00,400
这是一个投诉还是产品信息请求等？

11
00:01:00,400 --> 00:01:09,360
一旦确定这是一个产品查询，它将检索有关电视的相关信息，并使用语言模型编写一个有帮助的回答。

12
00:01:09,360 --> 00:01:15,520
最后，你需要检查输出内容，确保没有问题，比如不准确或不适当的答案。

13
00:01:15,520 --> 00:01:23,280
在这门课程中，你会发现一个主题，那就是一个应用程序通常需要多个对最终用户不可见的内部步骤。

14
00:01:23,280 --> 00:01:31,520
你通常希望按顺序处理用户输入，经过多个步骤才能得到最终显示给用户的输出。

15
00:01:31,520 --> 00:01:39,520
当你使用LLM构建复杂系统时，从长远来看，你通常还希望不断改进系统。

16
00:01:39,520 --> 00:01:49,520
因此，我还将与您分享开发基于LLM的应用程序的过程感受以及评估和改进系统的最佳实践。

17
00:01:49,520 --> 00:01:54,000
我们感谢许多为这门短期课程做出贡献的人。

18
00:01:54,000 --> 00:02:02,000
在OpenAI方面，我们感谢Andrew Kondrich、Joe Palermo、Boris Power和Ted Sanders。

19
00:02:02,000 --> 00:02:09,280
来自DeepLearning.ai团队的，也感谢Geoff Ladwig、Eddy Shyu和Tommy Nelson。

20
00:02:09,280 --> 00:02:14,720
通过这门短期课程，我们希望你能够对自己建立一个复杂的多步应用程序的能力充满信心，

21
00:02:14,720 --> 00:02:18,080
并且能够维护和不断改进它。

22
00:02:18,080 --> 00:02:20,080
让我们开始吧。

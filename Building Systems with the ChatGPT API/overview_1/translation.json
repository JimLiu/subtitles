{
  "chunks": [
    {
      "items": [
        {
          "id": "1",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 0,
            "milliseconds": 0
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 4,
            "milliseconds": 880
          },
          "text": "Welcome to this course on Building Systems using the ChatGPT API."
        },
        {
          "id": "2",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 4,
            "milliseconds": 880
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 9,
            "milliseconds": 920
          },
          "text": "Previously, Isa and I had presented a course on how to prompt ChatGPT."
        },
        {
          "id": "3",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 9,
            "milliseconds": 920
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 16,
            "milliseconds": 160
          },
          "text": "But a system requires much more than a single prompt or a single call to an LLM or large language model."
        },
        {
          "id": "4",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 16,
            "milliseconds": 160
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 23,
            "milliseconds": 680
          },
          "text": "In this short course, we'd like to share with you best practices for building a complex application using an LLM."
        },
        {
          "id": "5",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 23,
            "milliseconds": 680
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 30,
            "milliseconds": 400
          },
          "text": "We'll use the running example of building an end-to-end customer service assistance system that chains multiple calls to a language model,"
        },
        {
          "id": "6",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 30,
            "milliseconds": 400
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 36,
            "milliseconds": 960
          },
          "text": "using different instructions depending on the output of the previous call, and sometimes even looking things up from external sources."
        },
        {
          "id": "7",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 36,
            "milliseconds": 960
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 44,
            "milliseconds": 960
          },
          "text": "So for example, given a user input like \"tell me about what TVs are for sale\", we'd use the following steps to process this."
        },
        {
          "id": "8",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 44,
            "milliseconds": 960
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 52,
            "milliseconds": 320
          },
          "text": "First, you can evaluate the input to make sure it doesn't contain any problematic content, such as hateful speech."
        },
        {
          "id": "9",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 52,
            "milliseconds": 320
          },
          "endTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 57,
            "milliseconds": 40
          },
          "text": "Next, the system will process the input. It will identify what type of query this is."
        },
        {
          "id": "10",
          "startTime": {
            "hours": 0,
            "minutes": 0,
            "seconds": 57,
            "milliseconds": 40
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 0,
            "milliseconds": 400
          },
          "text": "Is it a complaint or a product information request and so on?"
        }
      ],
      "source": [
        "Welcome to this course on Building Systems using the ChatGPT API.",
        "Previously, Isa and I had presented a course on how to prompt ChatGPT.",
        "But a system requires much more than a single prompt or a single call to an LLM or large language model.",
        "In this short course, we'd like to share with you best practices for building a complex application using an LLM.",
        "We'll use the running example of building an end-to-end customer service assistance system that chains multiple calls to a language model,",
        "using different instructions depending on the output of the previous call, and sometimes even looking things up from external sources.",
        "So for example, given a user input like \"tell me about what TVs are for sale\", we'd use the following steps to process this.",
        "First, you can evaluate the input to make sure it doesn't contain any problematic content, such as hateful speech.",
        "Next, the system will process the input. It will identify what type of query this is.",
        "Is it a complaint or a product information request and so on?"
      ],
      "result": [
        "欢迎参加关于使用ChatGPT API构建系统的课程。",
        "之前，Isa和我介绍了如何提示（Prompt）ChatGPT的课程。",
        "但是一个系统需要的远不止一个提示（Prompt）或一个对LLM（大型语言模型）的调用。",
        "在这个短期课程中，我们想和您分享使用LLM构建复杂应用程序的最佳实践。",
        "我们将以构建一个端到端的客户服务辅助系统为例，该系统将多个调用链接到语言模型，",
        "根据前一个调用的输出使用不同的指令，有时甚至从外部来源查找信息。",
        "例如，对于用户输入的“告诉我有哪些电视出售”，我们将使用以下步骤来处理。",
        "首先，您可以评估输入以确保其不包含任何有问题的内容，例如仇恨言论。",
        "接下来，系统将处理输入。它将确定这是哪种类型的查询。",
        "这是一个投诉还是产品信息请求等？"
      ],
      "status": "success",
      "errors": [],
      "mismatched": false
    },
    {
      "items": [
        {
          "id": "11",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 0,
            "milliseconds": 400
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 9,
            "milliseconds": 360
          },
          "text": "Once it has established that it is a product inquiry, it will retrieve the relevant information about TVs and use a language model to write a helpful response."
        },
        {
          "id": "12",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 9,
            "milliseconds": 360
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 15,
            "milliseconds": 520
          },
          "text": "Finally, you'll check the output to make sure it isn't problematic, such as inaccurate or inappropriate answers."
        },
        {
          "id": "13",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 15,
            "milliseconds": 520
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 23,
            "milliseconds": 280
          },
          "text": "One theme you see throughout this course is that an application often needs multiple internal steps that are invisible to the end user."
        },
        {
          "id": "14",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 23,
            "milliseconds": 280
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 31,
            "milliseconds": 520
          },
          "text": "You often want to sequentially process the user input in multiple steps to get to the final output that is then shown to the user."
        },
        {
          "id": "15",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 31,
            "milliseconds": 520
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 39,
            "milliseconds": 520
          },
          "text": "And as you build complex systems using LLMs, over the long term, you often want to also keep on improving the system."
        },
        {
          "id": "16",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 39,
            "milliseconds": 520
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 49,
            "milliseconds": 520
          },
          "text": "So I'll also share with you what the process of developing an LLM-based application feels like and some best practices for evaluating and improving a system over time."
        },
        {
          "id": "17",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 49,
            "milliseconds": 520
          },
          "endTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 54,
            "milliseconds": 0
          },
          "text": "We're grateful to many people that have contributed to this short course."
        },
        {
          "id": "18",
          "startTime": {
            "hours": 0,
            "minutes": 1,
            "seconds": 54,
            "milliseconds": 0
          },
          "endTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 2,
            "milliseconds": 0
          },
          "text": "On the OpenAI side, we're grateful to Andrew Kondrich, Joe Palermo, Boris Power, and Ted Sanders."
        },
        {
          "id": "19",
          "startTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 2,
            "milliseconds": 0
          },
          "endTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 9,
            "milliseconds": 280
          },
          "text": "And from the DeepLearning.ai team, thank you also to Geoff Ladwig, Eddy Shyu, and Tommy Nelson."
        },
        {
          "id": "20",
          "startTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 9,
            "milliseconds": 280
          },
          "endTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 14,
            "milliseconds": 720
          },
          "text": "Through this short course, we hope you'll come away confident in your abilities to build a complex, multi-step application,"
        },
        {
          "id": "21",
          "startTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 14,
            "milliseconds": 720
          },
          "endTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 18,
            "milliseconds": 80
          },
          "text": "and also be set up to maintain and keep on improving it."
        },
        {
          "id": "22",
          "startTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 18,
            "milliseconds": 80
          },
          "endTime": {
            "hours": 0,
            "minutes": 2,
            "seconds": 20,
            "milliseconds": 80
          },
          "text": "Let's dive in."
        }
      ],
      "source": [
        "Once it has established that it is a product inquiry, it will retrieve the relevant information about TVs and use a language model to write a helpful response.",
        "Finally, you'll check the output to make sure it isn't problematic, such as inaccurate or inappropriate answers.",
        "One theme you see throughout this course is that an application often needs multiple internal steps that are invisible to the end user.",
        "You often want to sequentially process the user input in multiple steps to get to the final output that is then shown to the user.",
        "And as you build complex systems using LLMs, over the long term, you often want to also keep on improving the system.",
        "So I'll also share with you what the process of developing an LLM-based application feels like and some best practices for evaluating and improving a system over time.",
        "We're grateful to many people that have contributed to this short course.",
        "On the OpenAI side, we're grateful to Andrew Kondrich, Joe Palermo, Boris Power, and Ted Sanders.",
        "And from the DeepLearning.ai team, thank you also to Geoff Ladwig, Eddy Shyu, and Tommy Nelson.",
        "Through this short course, we hope you'll come away confident in your abilities to build a complex, multi-step application,",
        "and also be set up to maintain and keep on improving it.",
        "Let's dive in."
      ],
      "result": [
        "一旦确定这是一个产品查询，它将检索有关电视的相关信息，并使用语言模型编写一个有帮助的回答。",
        "最后，你需要检查输出内容，确保没有问题，比如不准确或不适当的答案。",
        "在这门课程中，你会发现一个主题，那就是一个应用程序通常需要多个对最终用户不可见的内部步骤。",
        "你通常希望按顺序处理用户输入，经过多个步骤才能得到最终显示给用户的输出。",
        "当你使用LLM构建复杂系统时，从长远来看，你通常还希望不断改进系统。",
        "因此，我还将与您分享开发基于LLM的应用程序的过程感受以及评估和改进系统的最佳实践。",
        "我们感谢许多为这门短期课程做出贡献的人。",
        "在OpenAI方面，我们感谢Andrew Kondrich、Joe Palermo、Boris Power和Ted Sanders。",
        "来自DeepLearning.ai团队的，也感谢Geoff Ladwig、Eddy Shyu和Tommy Nelson。",
        "通过这门短期课程，我们希望你能够对自己建立一个复杂的多步应用程序的能力充满信心，",
        "并且能够维护和不断改进它。",
        "让我们开始吧。"
      ],
      "status": "success",
      "errors": [],
      "mismatched": false
    }
  ],
  "sourcePath": "input/Building Systems with the ChatGPT API/overview_1.srt",
  "ouputBasePath": "input/Building Systems with the ChatGPT API/overview_1",
  "totalCost": 0.06012,
  "translationPath": "input/Building Systems with the ChatGPT API/overview_1/translation.json"
}

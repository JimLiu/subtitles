欢迎来到《基于LangChain的大语言模型应用开发》的短期课程。 通过对大语言模型使用提示（Prompt），\N现在可以比以往任何时候都更快地开发AI应用程序。 但是一个应用程序可能需要多次对\N大语言模型写提示并对它输出的结果进行解析。 因此，需要编写很多胶水代码。 Harrison Chase创建的LangChain使这个开发过程变得更容易。 我很高兴邀请到Harrison，他与deeplearning.ai\N合作创建了这个短期课程，教大家如何使用这个神奇的工具。 谢谢Andrew的邀请，我很高兴来到这里。 LangChain起初是一个用于构建大语言模型应用的开源框架。 当时有些人在开发LLM的复杂应用，当我与他们交流时，\N发现了可以从中有一些公共的抽象，于是LangChain应运而生。 迄今为止，LangChain在社区中的采用情况非常令人激动。 期待与大家分享，也期待看到大家用它做出精彩的作品。 事实上，从一个现象你就可以看到LangChain的良好发展势头：\N它不仅拥有众多用户，还有数百名贡献者为其开源项目做出了贡献。 这对于它的快速发展至关重要。 这个团队更新代码和迭代功能的速度令人惊叹。 希望在学习完这个短期课程后，你\N也能迅速用LangChain搭建出很酷的应用。 说不定你还能一起参与贡献LangChain开源项目。 LangChain是一个用于构建LLM应用的开源开发框架。 我们有两个不同的包，一个是Python，\N另一个是JavaScript（TypeScript）。 LangChain注重组合和模块化。 LangChain一个很有价值的地方是有很多\N可以单独使用或与其他组件结合使用的独立组件。  另一个有价值的地方是有许多不同的用例， 可以将这些模块化组件链式组合成更完整的应用程序，并且非常容易上手。 在这个课程中，我们将介绍LangChain的常见组件。 我们会讨论模型。 我们会讨论提示，这是让模型做有用和有趣事情的方法。 我们会讨论索引，也就是检索召回数据，并且将数据与模型结合起来。 然后我们会讨论链式应用，更多端到端的用例以及代理，  代理一种非常令人兴奋的端到端用例，使用大语言模型作为推理引擎。  我们也感谢Ankush Gola， 他与Harrison Chase共同创立了LangChain， 他在这些材料的思考和短课程的创建中也做出了很大的贡献。 在深度学习和AI方面，Geoff Ladwig、\NEddie Shyu和Diala Ezzedine也为这些材料做出了贡献。 那么，让我们继续下一个视频，\N了解LangChain的：模型、提示和解析器。
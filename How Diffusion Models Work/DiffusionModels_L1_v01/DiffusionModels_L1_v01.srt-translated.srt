1
00:00:05,000 --> 00:00:08,500
在这个视频中，你的目标是了解一些扩散模型的基础知识。

2
00:00:08,500 --> 00:00:11,000
首先，我们将讨论扩散模型的目标，

3
00:00:11,000 --> 00:00:16,500
然后我们将探讨如何利用你手中的各种游戏角色图片训练数据对这些模型有用，

5
00:00:16,500 --> 00:00:19,500
最后我们会讨论如何在这些数据上训练模型。

6
00:00:19,500 --> 00:00:22,500
那么，扩散模型的目标是什么呢？

7
00:00:22,500 --> 00:00:25,131
好吧，你有很多的训练数据，

8
00:00:25,331 --> 00:00:30,000
比如你在这里看到的视频游戏角色的图像。

9
00:00:30,000 --> 00:00:32,000
这就是你的训练数据集。

10
00:00:32,000 --> 00:00:38,000
你想要的是更多在你的训练数据集中没有的角色图片。

11
00:00:38,000 --> 00:00:44,500
你可以使用一个神经网络，通过扩散模型过程为你生成更多这样的角色。

12
00:00:44,500 --> 00:00:48,000
那么现在，我们如何让这些图像对神经网络有用呢？

13
00:00:48,000 --> 00:00:52,500
嗯，你希望神经网络能够学习到游戏角色的一般概念，就是它是什么。

14
00:00:52,500 --> 00:00:59,500
这可能是更细微的细节，比如，你知道，游戏角色的头发颜色或者它的腰带扣。

15
00:00:59,500 --> 00:01:06,500
也可能是大概的轮廓，像头和身体的轮廓，以及所有在这之间的东西。

16
00:01:06,500 --> 00:01:12,961
有一种方法可以做到这一点，就是用你的数据强调细节或者大概轮廓。

17
00:01:13,161 --> 00:01:17,000
实际上，这就是在不同程度上添加噪声。

18
00:01:17,000 --> 00:01:19,500
也就是对图像添加噪声，

19
00:01:19,500 --> 00:01:22,000
这被称为噪声过程。

20
00:01:22,000 --> 00:01:23,500
这其实是受物理学的启发。

21
00:01:23,500 --> 00:01:27,000
你可以想象一滴墨水滴入一杯水中。

22
00:01:27,000 --> 00:01:30,000
一开始，你确切地知道墨水滴在哪里落下。

23
00:01:30,000 --> 00:01:35,000
但随着时间的推移，你会看到它在水中扩散，直到消失。

24
00:01:35,000 --> 00:01:38,500
这里的想法也是一样的，从Bob这个游戏角色开始，

25
00:01:38,500 --> 00:01:45,000
当你添加噪声时，它会消失，直到你不知道它究竟是哪个游戏角色。

26
00:01:45,000 --> 00:01:52,500
那么，当你逐渐给图像添加更多的噪声时，神经网络应该在每个噪声级别上想些什么呢？

28
00:01:52,500 --> 00:01:56,500
嗯，当它是角色Bob的时候，你希望神经网络能说，

29
00:01:56,500 --> 00:01:59,000
“对，这就是角色Bob！保持Bob的原样，

30
00:01:59,000 --> 00:02:00,500
这是一个角色。”

31
00:02:00,500 --> 00:02:03,500
如果它可能是Bob，如果它很可能是Bob，

32
00:02:03,500 --> 00:02:06,500
那么你可能希望神经网络能说：

33
00:02:06,500 --> 00:02:08,000
“这上面有一些噪声。

34
00:02:08,000 --> 00:02:12,500
建议可能的细节，使它看起来就像角色Bob。”

35
00:02:12,500 --> 00:02:14,500
如果它现在只是一个角色的轮廓，

36
00:02:14,500 --> 00:02:18,500
你只能感觉到这可能是一个角色人物，

37
00:02:18,500 --> 00:02:22,000
但它可能是Bob，或者Fred，甚至可能是Nancy，

38
00:02:22,000 --> 00:02:27,000
那么你就想要为可能的角色建议更普遍的细节。

39
00:02:27,000 --> 00:02:30,000
所以，你可能会根据这个为Bob提供一些细节，

40
00:02:30,000 --> 00:02:32,500
或者你会为Fred提供一些细节。

41
00:02:32,500 --> 00:02:36,500
最后，如果你一点也不清楚，如果它看起来完全不像什么，

42
00:02:36,500 --> 00:02:39,000
你还是希望它更像一个游戏角色。

43
00:02:39,000 --> 00:02:41,000
你仍然希望神经网络说：“你知道吗？

44
00:02:41,000 --> 00:02:45,000
我仍然会拿这个完全有噪声的图像，

45
00:02:45,000 --> 00:02:48,000
我会把它变成稍微像游戏角色一点的东西，

46
00:02:48,000 --> 00:02:51,500
我会提出一个游戏角色可能看起来的轮廓。”

47
00:02:51,500 --> 00:02:54,500
好了，那么让我们看看这个添加噪声的过程，

48
00:02:54,500 --> 00:02:59,500
随着时间的推移，逐渐添加噪声的过程是什么样子的。

49
00:02:59,500 --> 00:03:05,500
然后它就消失了，一滴墨水在一杯水里完全扩散开来。

50
00:03:05,500 --> 00:03:07,500
那么现在让我们开始训练那个神经网络吧。

51
00:03:07,500 --> 00:03:11,500
它学会将不同的噪声图像变回游戏角色。

52
00:03:11,500 --> 00:03:13,000
这就是你的目标。

53
00:03:13,000 --> 00:03:16,500
它是如何做到这一点的呢？它学会移除你添加的噪声，

54
00:03:16,500 --> 00:03:21,500
从完全没有主意的级别开始，那里只有纯粹的噪声，

55
00:03:21,500 --> 00:03:25,500
开始让人感觉可能有一个人在里面，

56
00:03:25,500 --> 00:03:30,500
看起来像Fred，然后最后是一个看起来像Fred的游戏角色。

57
00:03:30,500 --> 00:03:37,500
我想强调的是，没有主意的噪声级别非常重要，因为它是正态分布的。

58
00:03:37,500 --> 00:03:41,500
我的意思是，每一个像素都是从一个正态分布中抽样的，

59
00:03:41,500 --> 00:03:45,500
也被称为高斯分布或者钟形曲线。

60
00:03:45,500 --> 00:03:50,500
所以当你想要让神经网络给你一个新的角色，比如这里的Fred，

61
00:03:50,500 --> 00:03:54,500
你可以从那个正态分布中抽样噪声，

62
00:03:54,500 --> 00:04:00,500
然后你可以通过让神经网络逐渐移除那个噪声来得到一个全新的游戏角色。

63
00:04:00,500 --> 00:04:02,500
所以现在你达到了你的目标：

64
00:04:02,500 --> 00:04:06,500
得到更多的、你没有训练过的游戏角色。

65
00:04:06,500 --> 00:04:09,500
在下一个视频中，我们将介绍抽样。

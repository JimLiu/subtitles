1
00:00:00,000 --> 00:00:01,125
GWENDOLYN STRIPLING: Hello.

2
00:00:01,125 --> 00:00:04,019
And welcome to Introduction
to Generative AI.

3
00:00:04,019 --> 00:00:06,689
My name is Dr.
Gwendolyn Stripling.

4
00:00:06,690 --> 00:00:09,539
And I am the
artificial intelligence

5
00:00:09,539 --> 00:00:14,619
technical curriculum developer
here at Google Cloud.

6
00:00:14,619 --> 00:00:18,489
In this course, you learn
to define generative AI,

7
00:00:18,489 --> 00:00:23,078
explain how generative AI works,
describe generative AI model

8
00:00:23,079 --> 00:00:28,388
types, and describe
generative AI applications.

9
00:00:28,390 --> 00:00:31,959
Generative AI is a type
of artificial intelligence

10
00:00:31,960 --> 00:00:36,169
technology that can produce
various types of content,

11
00:00:36,170 --> 00:00:41,049
including text, imagery,
audio, and synthetic data.

12
00:00:41,049 --> 00:00:44,089
But what is artificial
intelligence?

13
00:00:44,090 --> 00:00:46,030
Well, since we are
going to explore

14
00:00:46,030 --> 00:00:48,559
generative artificial
intelligence,

15
00:00:48,560 --> 00:00:51,129
let's provide a bit of context.

16
00:00:51,130 --> 00:00:53,139
So two very common
questions asked

17
00:00:53,140 --> 00:00:55,809
are what is artificial
intelligence

18
00:00:55,810 --> 00:01:00,219
and what is the difference
between AI and machine

19
00:01:00,219 --> 00:01:01,479
learning.

20
00:01:01,479 --> 00:01:05,858
One way to think about it
is that AI is a discipline,

21
00:01:05,859 --> 00:01:08,289
like physics for example.

22
00:01:08,290 --> 00:01:11,230
AI is a branch of
computer science

23
00:01:11,230 --> 00:01:15,009
that deals with the creation
of intelligence agents, which

24
00:01:15,010 --> 00:01:20,549
are systems that can reason,
and learn, and act autonomously.

25
00:01:20,549 --> 00:01:24,688
Essentially, AI has to do
with the theory and methods

26
00:01:24,689 --> 00:01:30,189
to build machines that
think and act like humans.

27
00:01:30,189 --> 00:01:33,019
In this discipline, we
have machine learning,

28
00:01:33,019 --> 00:01:35,588
which is a subfield of AI.

29
00:01:35,590 --> 00:01:40,209
It is a program or system that
trains a model from input data.

30
00:01:40,209 --> 00:01:42,818
That trained model can
make useful predictions

31
00:01:42,819 --> 00:01:45,879
from new or never
before seen data

32
00:01:45,879 --> 00:01:49,959
drawn from the same one
used to train the model.

33
00:01:49,959 --> 00:01:51,939
Machine learning
gives the computer

34
00:01:51,939 --> 00:01:56,469
the ability to learn without
explicit programming.

35
00:01:56,469 --> 00:01:59,439
Two of the most common classes
of machine learning models

36
00:01:59,439 --> 00:02:03,788
are unsupervised and
supervised ML models.

37
00:02:03,790 --> 00:02:05,739
The key difference
between the two

38
00:02:05,739 --> 00:02:09,667
is that, with supervised
models, we have labels.

39
00:02:09,669 --> 00:02:14,680
Labeled data is data that comes
with a tag like a name, a type,

40
00:02:14,680 --> 00:02:16,240
or a number.

41
00:02:16,240 --> 00:02:20,629
Unlabeled data is data
that comes with no tag.

42
00:02:20,629 --> 00:02:23,388
This graph is an
example of the problem

43
00:02:23,389 --> 00:02:26,208
that a supervised model
might try to solve.

44
00:02:26,210 --> 00:02:29,779
For example, let's say you
are the owner of a restaurant.

45
00:02:29,780 --> 00:02:32,369
You have historical
data of the bill amount

46
00:02:32,370 --> 00:02:36,139
and how much different people
tipped based on order type

47
00:02:36,139 --> 00:02:39,498
and whether it was
picked up or delivered.

48
00:02:39,500 --> 00:02:42,979
In supervised learning, the
model learns from past examples

49
00:02:42,979 --> 00:02:47,238
to predict future values,
in this case tips.

50
00:02:47,240 --> 00:02:49,969
So here the model uses
the total bill amount

51
00:02:49,969 --> 00:02:54,228
to predict the future tip amount
based on whether an order was

52
00:02:54,229 --> 00:02:57,019
picked up or delivered.

53
00:02:57,020 --> 00:02:58,840
This is an example
of the problem

54
00:02:58,840 --> 00:03:02,330
that an unsupervised
model might try to solve.

55
00:03:02,330 --> 00:03:05,080
So here you want to look
at tenure and income

56
00:03:05,080 --> 00:03:08,050
and then group or
cluster employees

57
00:03:08,050 --> 00:03:11,169
to see whether someone
is on the fast track.

58
00:03:11,169 --> 00:03:14,528
Unsupervised problems
are all about discovery,

59
00:03:14,530 --> 00:03:18,939
about looking at the raw data
and seeing if it naturally

60
00:03:18,939 --> 00:03:21,749
falls into groups.

61
00:03:21,750 --> 00:03:24,649
Let's get a little deeper
and show this graphically

62
00:03:24,650 --> 00:03:27,529
as understanding
these concepts are

63
00:03:27,530 --> 00:03:31,789
the foundation for your
understanding of generative AI.

64
00:03:31,789 --> 00:03:35,869
In supervised learning,
testing data values or x

65
00:03:35,870 --> 00:03:37,879
are input into the model.

66
00:03:37,879 --> 00:03:42,499
The model outputs a prediction
and compares that prediction

67
00:03:42,500 --> 00:03:45,859
to the training data
used to train the model.

68
00:03:45,860 --> 00:03:50,749
If the predicted test data
values and actual training data

69
00:03:50,750 --> 00:03:54,379
values are far apart,
that's called error.

70
00:03:54,379 --> 00:03:56,928
And the model tries
to reduce this error

71
00:03:56,930 --> 00:04:01,580
until the predicted and actual
values are closer together.

72
00:04:01,580 --> 00:04:05,709
This is a classic
optimization problem.

73
00:04:05,710 --> 00:04:07,409
Now that we've
explored the difference

74
00:04:07,409 --> 00:04:10,469
between artificial intelligence
and machine learning,

75
00:04:10,469 --> 00:04:13,859
and supervised and
unsupervised learning,

76
00:04:13,860 --> 00:04:16,528
let's briefly explore
where deep learning

77
00:04:16,528 --> 00:04:20,638
fits as a subset of
machine learning methods.

78
00:04:20,639 --> 00:04:22,589
While machine learning
is a broad field that

79
00:04:22,589 --> 00:04:25,079
encompasses many
different techniques,

80
00:04:25,079 --> 00:04:27,389
deep learning is a type
of machine learning

81
00:04:27,389 --> 00:04:29,788
that uses artificial
neural networks,

82
00:04:29,790 --> 00:04:32,970
allowing them to process more
complex patterns than machine

83
00:04:32,970 --> 00:04:34,470
learning.

84
00:04:34,470 --> 00:04:37,879
Artificial neural networks are
inspired by the human brain.

85
00:04:37,879 --> 00:04:41,689
They are made up of many
interconnected nodes or neurons

86
00:04:41,689 --> 00:04:46,129
that can learn to perform tasks
by processing data and making

87
00:04:46,129 --> 00:04:47,268
predictions.

88
00:04:47,269 --> 00:04:49,759
Deep learning models
typically have many layers

89
00:04:49,759 --> 00:04:52,428
of neurons, which
allows them to learn

90
00:04:52,430 --> 00:04:55,879
more complex patterns than
traditional machine learning

91
00:04:55,879 --> 00:04:56,719
models.

92
00:04:56,720 --> 00:05:00,839
And neural networks can use
both labeled and unlabeled data.

93
00:05:00,839 --> 00:05:03,529
This is called
semi-supervised learning.

94
00:05:03,529 --> 00:05:06,259
In semi-supervised
learning, a neural network

95
00:05:06,259 --> 00:05:09,138
is trained on a small
amount of labeled data

96
00:05:09,139 --> 00:05:12,589
and a large amount
of unlabeled data.

97
00:05:12,589 --> 00:05:15,198
The labeled data helps
the neural network

98
00:05:15,199 --> 00:05:17,748
to learn the basic
concepts of the task

99
00:05:17,750 --> 00:05:20,959
while the unlabeled data
helps the neural network

100
00:05:20,959 --> 00:05:24,539
to generalize to new examples.

101
00:05:24,540 --> 00:05:27,720
Now we finally get to
where generative AI

102
00:05:27,720 --> 00:05:30,389
fits into this AI discipline.

103
00:05:30,389 --> 00:05:33,569
Gen AI is a subset of
deep learning, which

104
00:05:33,569 --> 00:05:36,539
means it uses artificial
neural networks,

105
00:05:36,540 --> 00:05:40,410
can process both labeled
and unlabeled data using

106
00:05:40,410 --> 00:05:45,899
supervised, unsupervised,
and semi-supervised methods.

107
00:05:45,899 --> 00:05:51,318
Large language models are also
a subset of deep learning.

108
00:05:51,319 --> 00:05:54,309
Deep learning models, or machine
learning models in general,

109
00:05:54,310 --> 00:05:59,634
can be divided into two types,
generative and discriminative.

110
00:05:59,634 --> 00:06:02,288
A discriminative model
is a type of model

111
00:06:02,290 --> 00:06:06,519
that is used to classify or
predict labels for data points.

112
00:06:06,519 --> 00:06:08,079
Discriminative
models are typically

113
00:06:08,079 --> 00:06:10,958
trained on a data set
of labeled data points.

114
00:06:10,959 --> 00:06:14,528
And they learn the relationship
between the features

115
00:06:14,529 --> 00:06:17,348
of the data points
and the labels.

116
00:06:17,350 --> 00:06:20,479
Once a discriminative
model is trained,

117
00:06:20,480 --> 00:06:25,180
it can be used to predict the
label for new data points.

118
00:06:25,180 --> 00:06:28,389
A generative model
generates new data instances

119
00:06:28,389 --> 00:06:33,608
based on a learned probability
distribution of existing data.

120
00:06:33,610 --> 00:06:38,069
Thus generative models
generate new content.

121
00:06:38,069 --> 00:06:40,258
Take this example here.

122
00:06:40,259 --> 00:06:42,989
The discriminative model learns
the conditional probability

123
00:06:42,990 --> 00:06:45,779
distribution or the
probability of y,

124
00:06:45,779 --> 00:06:50,069
our output, given x, our
input, that this is a dog

125
00:06:50,069 --> 00:06:54,479
and classifies it as
a dog and not a cat.

126
00:06:54,480 --> 00:06:58,259
The generative model learns the
joint probability distribution

127
00:06:58,259 --> 00:07:02,098
or the probability of
x and y and predicts

128
00:07:02,100 --> 00:07:05,249
the conditional probability
that this is a dog

129
00:07:05,250 --> 00:07:09,429
and can then generate
a picture of a dog.

130
00:07:09,430 --> 00:07:11,970
So to summarize,
generative models

131
00:07:11,970 --> 00:07:16,529
can generate new data instances
while discriminative models

132
00:07:16,529 --> 00:07:21,469
discriminate between different
kinds of data instances.

133
00:07:21,470 --> 00:07:23,599
The top image shows
a traditional machine

134
00:07:23,600 --> 00:07:25,579
learning model which
attempts to learn

135
00:07:25,579 --> 00:07:28,878
the relationship between
the data and the label,

136
00:07:28,879 --> 00:07:30,589
or what you want to predict.

137
00:07:30,589 --> 00:07:33,468
The bottom image shows
a generative AI model

138
00:07:33,470 --> 00:07:36,979
which attempts to learn
patterns on content so that it

139
00:07:36,980 --> 00:07:40,100
can generate new content.

140
00:07:40,100 --> 00:07:43,839
A good way to distinguish
what is gen AI and what is not

141
00:07:43,839 --> 00:07:46,368
is shown in this illustration.

142
00:07:46,370 --> 00:07:51,379
It is not gen AI when the
output, or y, or label is

143
00:07:51,379 --> 00:07:55,758
a number or a class, for
example spam or not spam,

144
00:07:55,759 --> 00:07:57,619
or a probability.

145
00:07:57,620 --> 00:08:03,169
It is gen AI when the output is
natural language, like speech

146
00:08:03,170 --> 00:08:08,610
or text, an image or
audio, for example.

147
00:08:08,610 --> 00:08:12,029
Visualizing this mathematically
would look like this.

148
00:08:12,029 --> 00:08:14,339
If you haven't seen
this for a while,

149
00:08:14,339 --> 00:08:18,898
the y is equal to f of
x equation calculates

150
00:08:18,899 --> 00:08:23,278
the dependent output of a
process given different inputs.

151
00:08:23,279 --> 00:08:25,379
The y stands for
the model output.

152
00:08:25,379 --> 00:08:29,069
The f embodies the function
used in the calculation.

153
00:08:29,069 --> 00:08:33,278
And the x represents the input
or inputs used for the formula.

154
00:08:33,279 --> 00:08:36,658
So the model output is a
function of all the inputs.

155
00:08:36,658 --> 00:08:41,398
If the y is the number,
like predicted sales,

156
00:08:41,399 --> 00:08:43,439
it is not gen AI.

157
00:08:43,440 --> 00:08:46,739
If y is a sentence,
like define sales,

158
00:08:46,740 --> 00:08:51,480
it is generative as the question
would elicit a text response.

159
00:08:51,480 --> 00:08:55,710
The response would be based
on all the massive large data

160
00:08:55,710 --> 00:08:59,250
the model was
already trained on.

161
00:08:59,250 --> 00:09:03,450
To summarize at a high level,
the traditional, classical

162
00:09:03,450 --> 00:09:05,999
supervised and unsupervised
learning process

163
00:09:06,000 --> 00:09:09,929
takes training code and
label data to build a model.

164
00:09:09,929 --> 00:09:12,419
Depending on the
use case or problem,

165
00:09:12,419 --> 00:09:15,298
the model can give
you a prediction.

166
00:09:15,299 --> 00:09:18,629
It can classify something
or cluster something.

167
00:09:18,629 --> 00:09:22,439
We use this example to show
you how much more robust

168
00:09:22,440 --> 00:09:25,289
the gen AI process is.

169
00:09:25,289 --> 00:09:29,068
The gen AI process can take
training code, label data,

170
00:09:29,070 --> 00:09:31,529
and unlabeled data
of all data types

171
00:09:31,529 --> 00:09:33,299
and build a foundation model.

172
00:09:33,299 --> 00:09:36,419
The foundation model can
then generate new content.

173
00:09:36,419 --> 00:09:42,598
For example, text, code,
images, audio, video, et cetera.

174
00:09:42,600 --> 00:09:45,179
We've come a long away from
traditional programming

175
00:09:45,179 --> 00:09:48,299
to neural networks
to generative models.

176
00:09:48,299 --> 00:09:50,279
In traditional
programming, we used

177
00:09:50,279 --> 00:09:53,339
to have to hard code the rules
for distinguishing a cat--

178
00:09:53,340 --> 00:10:00,389
the type, animal; legs,
four; ears, two; fur, yes;

179
00:10:00,389 --> 00:10:03,058
likes yarn and catnip.

180
00:10:03,059 --> 00:10:05,309
In the wave of
neural networks, we

181
00:10:05,309 --> 00:10:07,918
could give the network
pictures of cats and dogs

182
00:10:07,919 --> 00:10:12,768
and ask is this a cat and
it would predict a cat.

183
00:10:12,769 --> 00:10:15,739
In the generative
wave, we as users

184
00:10:15,740 --> 00:10:18,769
can generate our own
content, whether it

185
00:10:18,769 --> 00:10:23,089
be text, images, audio,
video, et cetera, for example

186
00:10:23,090 --> 00:10:26,360
models like PaLM or
Pathways Language Model,

187
00:10:26,360 --> 00:10:30,139
or LAMBDA, Language Model
for Dialogue Applications,

188
00:10:30,139 --> 00:10:33,438
ingest very, very large data
from the multiple sources

189
00:10:33,440 --> 00:10:36,289
across the internet and
build foundation language

190
00:10:36,289 --> 00:10:40,789
models we can use simply
by asking a question,

191
00:10:40,789 --> 00:10:43,729
whether typing it into
a prompt or verbally

192
00:10:43,730 --> 00:10:45,899
talking into the prompt itself.

193
00:10:45,899 --> 00:10:48,798
So when you ask it
what's a cat, it

194
00:10:48,799 --> 00:10:52,609
can give you everything it
has learned about a cat.

195
00:10:52,610 --> 00:10:55,009
Now we come to our
formal definition.

196
00:10:55,009 --> 00:10:57,529
What is generative AI?

197
00:10:57,529 --> 00:11:00,019
Gen AI is a type of
artificial intelligence

198
00:11:00,019 --> 00:11:02,898
that creates new content
based on what it has

199
00:11:02,899 --> 00:11:05,149
learned from existing content.

200
00:11:05,149 --> 00:11:07,519
The process of learning
from existing content

201
00:11:07,519 --> 00:11:10,579
is called training and
results in the creation

202
00:11:10,580 --> 00:11:13,879
of a statistical model
when given a prompt.

203
00:11:13,879 --> 00:11:18,258
AI uses the model to predict
what an expected response might

204
00:11:18,259 --> 00:11:21,979
be and this generates
new content.

205
00:11:21,980 --> 00:11:24,350
Essentially, it learns
the underlying structure

206
00:11:24,350 --> 00:11:26,929
of the data and
can then generate

207
00:11:26,929 --> 00:11:31,429
new samples that are similar
to the data it was trained on.

208
00:11:31,429 --> 00:11:35,869
As previously mentioned, a
generative language model

209
00:11:35,870 --> 00:11:38,720
can take what it has learned
from the examples it's

210
00:11:38,720 --> 00:11:41,629
been shown and create
something entirely new

211
00:11:41,629 --> 00:11:43,399
based on that information.

212
00:11:43,399 --> 00:11:47,809
Large language models are
one type of generative AI

213
00:11:47,809 --> 00:11:52,309
since they generate novel
combinations of text

214
00:11:52,309 --> 00:11:56,179
in the form of natural
sounding language.

215
00:11:56,179 --> 00:11:59,149
A generative image
model takes an image

216
00:11:59,149 --> 00:12:04,498
as input and can output text,
another image, or video.

217
00:12:04,500 --> 00:12:07,339
For example, under
the output text,

218
00:12:07,340 --> 00:12:09,679
you can get visual
question answering

219
00:12:09,679 --> 00:12:14,778
while under output image, an
image completion is generated.

220
00:12:14,779 --> 00:12:19,309
And under output video,
animation is generated.

221
00:12:19,309 --> 00:12:22,759
A generative language
model takes text as input

222
00:12:22,759 --> 00:12:27,589
and can output more text, an
image, audio, or decisions.

223
00:12:27,590 --> 00:12:29,690
For example, under
the output text,

224
00:12:29,690 --> 00:12:31,399
question answering is generated.

225
00:12:31,399 --> 00:12:35,738
And under output image,
a video is generated.

226
00:12:35,740 --> 00:12:38,769
We've stated that generative
language models learn

227
00:12:38,769 --> 00:12:41,739
about patterns and language
through training data,

228
00:12:41,740 --> 00:12:46,509
then, given some text, they
predict what comes next.

229
00:12:46,509 --> 00:12:50,739
Thus generative language models
are pattern matching systems.

230
00:12:50,740 --> 00:12:54,889
They learn about patterns
based on the data you provide.

231
00:12:54,889 --> 00:12:57,168
Here is an example.

232
00:12:57,169 --> 00:12:59,928
Based on things it's learned
from its training data,

233
00:12:59,929 --> 00:13:03,688
it offers predictions of how
to complete this sentence,

234
00:13:03,690 --> 00:13:09,429
I'm making a sandwich with
peanut butter and jelly.

235
00:13:09,429 --> 00:13:12,098
Here is the same
example using Bard,

236
00:13:12,100 --> 00:13:15,399
which is trained on a
massive amount of text data

237
00:13:15,399 --> 00:13:17,709
and is able to
communicate and generate

238
00:13:17,710 --> 00:13:21,729
humanlike text in response
to a wide range of prompts

239
00:13:21,730 --> 00:13:23,529
and questions.

240
00:13:23,529 --> 00:13:25,848
Here is another example.

241
00:13:25,850 --> 00:13:29,049
The meaning of life is--

242
00:13:29,049 --> 00:13:32,019
and Bart gives you
a contextual answer

243
00:13:32,019 --> 00:13:35,679
and then shows the highest
probability response.

244
00:13:35,679 --> 00:13:40,329
The power of generative AI comes
from the use of transformers.

245
00:13:40,330 --> 00:13:43,179
Transformers produced
a 2018 revolution

246
00:13:43,179 --> 00:13:45,399
in natural language processing.

247
00:13:45,399 --> 00:13:47,948
At a high level, a
transformer model

248
00:13:47,950 --> 00:13:50,629
consists of an
encoder and decoder.

249
00:13:50,629 --> 00:13:53,019
The encoder encodes
the input sequence

250
00:13:53,019 --> 00:13:55,599
and passes it to
the decoder, which

251
00:13:55,600 --> 00:13:58,720
learns how to decode
the representation

252
00:13:58,720 --> 00:14:01,149
for a relevant task.

253
00:14:01,149 --> 00:14:06,339
In transformers, hallucinations
are words or phrases

254
00:14:06,340 --> 00:14:09,190
that are generated
by the model that

255
00:14:09,190 --> 00:14:13,659
are often nonsensical or
grammatically incorrect.

256
00:14:13,659 --> 00:14:17,179
Hallucinations can be caused
by a number of factors,

257
00:14:17,179 --> 00:14:21,429
including the model is not
trained on enough data,

258
00:14:21,429 --> 00:14:25,629
or the model is trained
on noisy or dirty data,

259
00:14:25,629 --> 00:14:29,439
or the model is not
given enough context,

260
00:14:29,440 --> 00:14:33,009
or the model is not
given enough constraints.

261
00:14:33,009 --> 00:14:35,529
Hallucinations can be a
problem for transformers

262
00:14:35,529 --> 00:14:40,029
because they can make the output
text difficult to understand.

263
00:14:40,029 --> 00:14:41,859
They can also make
the model more

264
00:14:41,860 --> 00:14:46,690
likely to generate incorrect
or misleading information.

265
00:14:46,690 --> 00:14:49,809
A prompt is a
short piece of text

266
00:14:49,809 --> 00:14:53,409
that is given to the large
language model as input.

267
00:14:53,409 --> 00:14:57,578
And it can be used to control
the output of the model

268
00:14:57,580 --> 00:14:59,320
in a variety of ways.

269
00:14:59,320 --> 00:15:01,899
Prompt design is the
process of creating

270
00:15:01,899 --> 00:15:04,988
a prompt that will
generate the desired output

271
00:15:04,990 --> 00:15:07,649
from a large language model.

272
00:15:07,649 --> 00:15:11,729
As previously mentioned,
gen AI depends a lot

273
00:15:11,730 --> 00:15:14,759
on the training data that
you have fed into it.

274
00:15:14,759 --> 00:15:18,268
And it analyzes the patterns
and structures of the input data

275
00:15:18,269 --> 00:15:20,219
and thus learns.

276
00:15:20,220 --> 00:15:23,879
But with access to a browser
based prompt, you, the user,

277
00:15:23,879 --> 00:15:27,419
can generate your own content.

278
00:15:27,419 --> 00:15:31,569
We've shown illustrations of the
types of input based upon data.

279
00:15:31,570 --> 00:15:33,960
Here are the
associated model types.

280
00:15:33,960 --> 00:15:35,639
Text-to-text.

281
00:15:35,639 --> 00:15:38,699
Text-to-text models take
a natural language input

282
00:15:38,700 --> 00:15:40,709
and produces a text output.

283
00:15:40,710 --> 00:15:43,230
These models are trained
to learn the mapping

284
00:15:43,230 --> 00:15:45,419
between a pair of text, e.g.

285
00:15:45,419 --> 00:15:49,739
for example, translation
from one language to another.

286
00:15:49,740 --> 00:15:50,939
Text-to-image.

287
00:15:50,940 --> 00:15:54,929
Text-to-image models are trained
on a large set of images,

288
00:15:54,929 --> 00:15:58,288
each captioned with a
short text description.

289
00:15:58,289 --> 00:16:01,438
Diffusion is one method
used to achieve this.

290
00:16:01,440 --> 00:16:04,469
Text-to-video and text-to-3D.

291
00:16:04,470 --> 00:16:08,249
Text-to-video models aim to
generate a video representation

292
00:16:08,250 --> 00:16:09,899
from text input.

293
00:16:09,899 --> 00:16:13,918
The input text can be anything
from a single sentence

294
00:16:13,919 --> 00:16:15,419
to a full script.

295
00:16:15,419 --> 00:16:20,218
And the output is a video that
corresponds to the input text.

296
00:16:20,220 --> 00:16:23,789
Similarly, text-to-3D
models generate

297
00:16:23,789 --> 00:16:28,199
three dimensional objects that
correspond to a user's text

298
00:16:28,200 --> 00:16:29,609
description.

299
00:16:29,610 --> 00:16:34,909
For example, this can be used
in games or other 3D worlds.

300
00:16:34,909 --> 00:16:36,499
Text-to-task.

301
00:16:36,500 --> 00:16:41,120
Text-to-task models are trained
to perform a defined task

302
00:16:41,120 --> 00:16:44,120
or action based on text input.

303
00:16:44,120 --> 00:16:46,639
This task can be a
wide range of actions

304
00:16:46,639 --> 00:16:50,898
such as answering a question,
performing a search,

305
00:16:50,899 --> 00:16:55,229
making a prediction, or
taking some sort of action.

306
00:16:55,230 --> 00:16:58,220
For example, a
text-to-task model

307
00:16:58,220 --> 00:17:03,559
could be trained to navigate a
web UI or make changes to a doc

308
00:17:03,559 --> 00:17:04,998
through the GUI.

309
00:17:05,000 --> 00:17:08,690
A foundation model is a
large AI model pre-trained

310
00:17:08,690 --> 00:17:13,338
on a vast quantity of data
designed to be adapted or fine

311
00:17:13,338 --> 00:17:17,269
tuned to a wide range
of downstream tasks,

312
00:17:17,269 --> 00:17:22,309
such as sentiment analysis,
image captioning, and object

313
00:17:22,309 --> 00:17:23,659
recognition.

314
00:17:23,660 --> 00:17:26,240
Foundation models
have the potential

315
00:17:26,240 --> 00:17:29,329
to revolutionize many
industries, including

316
00:17:29,329 --> 00:17:32,659
health care, finance,
and customer service.

317
00:17:32,660 --> 00:17:36,410
They can be used to
detect fraud and provide

318
00:17:36,410 --> 00:17:38,979
personalized customer support.

319
00:17:38,980 --> 00:17:41,890
Vertex AI offers a
model garden that

320
00:17:41,890 --> 00:17:43,930
includes foundation models.

321
00:17:43,930 --> 00:17:45,880
The language foundation
models include

322
00:17:45,880 --> 00:17:48,730
PaLM API for chat and text.

323
00:17:48,730 --> 00:17:52,789
The vision foundation models
includes stable diffusion,

324
00:17:52,789 --> 00:17:55,898
which has been shown to
be effective at generating

325
00:17:55,900 --> 00:18:00,329
high quality images
from text descriptions.

326
00:18:00,329 --> 00:18:01,829
Let's say you have
a use case where

327
00:18:01,829 --> 00:18:05,248
you need to gather sentiments
about how your customers are

328
00:18:05,250 --> 00:18:07,890
feeling about your
product or service.

329
00:18:07,890 --> 00:18:12,720
You can use the classification
task sentiment analysis task

330
00:18:12,720 --> 00:18:15,299
model for just that purpose.

331
00:18:15,299 --> 00:18:19,709
And what if you needed to
perform occupancy analytics?

332
00:18:19,710 --> 00:18:23,369
There is a task model
for your use case.

333
00:18:23,369 --> 00:18:27,219
Shown here are gen
AI applications.

334
00:18:27,220 --> 00:18:30,659
Let's look at an example
of code generation

335
00:18:30,660 --> 00:18:34,410
shown in the second block
under code at the top.

336
00:18:34,410 --> 00:18:39,359
In this example, I've input a
code file conversion problem,

337
00:18:39,359 --> 00:18:41,849
converting from Python to JSON.

338
00:18:41,849 --> 00:18:42,719
I use Bard.

339
00:18:42,720 --> 00:18:46,479
And I insert into the
prompt box the following.

340
00:18:46,480 --> 00:18:50,519
I have a Pandas DataFrame with
two columns, one with the file

341
00:18:50,519 --> 00:18:54,298
name and one with the hour
in which it is generated.

342
00:18:54,299 --> 00:18:57,419
I'm trying to convert
this into a JSON file

343
00:18:57,420 --> 00:19:00,569
in the format shown onscreen.

344
00:19:00,569 --> 00:19:06,719
Bard returns the steps I need
to do this and the code snippet.

345
00:19:06,720 --> 00:19:10,109
And here my output
is in a JSON format.

346
00:19:10,109 --> 00:19:11,219
It gets better.

347
00:19:11,220 --> 00:19:16,380
I happen to be using Google's
free, browser-based Jupyter

348
00:19:16,380 --> 00:19:18,539
Notebook, known as Colab.

349
00:19:18,539 --> 00:19:23,348
And I simply export the
Python code to Google's Colab.

350
00:19:23,349 --> 00:19:26,228
To summarize, Bart
code generation

351
00:19:26,230 --> 00:19:29,470
can help you debug your
lines of source code,

352
00:19:29,470 --> 00:19:31,869
explain your code
to you line by line,

353
00:19:31,869 --> 00:19:34,958
craft SQL queries
for your database,

354
00:19:34,960 --> 00:19:37,940
translate code from one
language to another,

355
00:19:37,940 --> 00:19:42,970
and generate documentation
and tutorials for source code.

356
00:19:42,970 --> 00:19:47,930
Generative AI Studio lets you
quickly explore and customize

357
00:19:47,930 --> 00:19:51,759
gen AI models that you can
leverage in your applications

358
00:19:51,759 --> 00:19:53,079
on Google Cloud.

359
00:19:53,079 --> 00:19:57,519
Generative AI Studio helps
developers create and deploy

360
00:19:57,519 --> 00:20:02,679
Gen AI models by providing a
variety of tools and resources

361
00:20:02,680 --> 00:20:05,740
that make it easy
to get started.

362
00:20:05,740 --> 00:20:09,409
For example, there's a
library of pre-trained models.

363
00:20:09,410 --> 00:20:12,229
There is a tool for
fine tuning models.

364
00:20:12,230 --> 00:20:15,489
There is a tool for deploying
models to production.

365
00:20:15,490 --> 00:20:18,339
And there is a community
forum for developers

366
00:20:18,339 --> 00:20:21,698
to share ideas and collaborate.

367
00:20:21,700 --> 00:20:24,459
Generative AI App
Builder lets you

368
00:20:24,460 --> 00:20:28,450
create gen AI apps without
having to write any code.

369
00:20:28,450 --> 00:20:31,990
Gen AI App Builder has a
drag and drop interface

370
00:20:31,990 --> 00:20:35,119
that makes it easy to
design and build apps.

371
00:20:35,119 --> 00:20:36,578
It has a visual
editor that makes

372
00:20:36,579 --> 00:20:39,309
it easy to create
and edit app content.

373
00:20:39,309 --> 00:20:40,839
It has a built-in
search engine that

374
00:20:40,839 --> 00:20:43,928
allows users to search for
information within the app.

375
00:20:43,930 --> 00:20:46,359
And it has a
conversational AI Engine

376
00:20:46,359 --> 00:20:49,599
that helps users to
interact with the app using

377
00:20:49,599 --> 00:20:51,399
natural language.

378
00:20:51,400 --> 00:20:55,449
You can create your own digital
assistants, custom search

379
00:20:55,450 --> 00:20:59,769
engines, knowledge bases,
training applications,

380
00:20:59,769 --> 00:21:01,949
and much more.

381
00:21:01,950 --> 00:21:05,400
PaLM API lets you
test and experiment

382
00:21:05,400 --> 00:21:09,179
with Google's large language
models and gen AI tools.

383
00:21:09,180 --> 00:21:11,700
To make prototyping quick
and more accessible,

384
00:21:11,700 --> 00:21:15,329
developers can integrate
PaLM API with Maker suite

385
00:21:15,329 --> 00:21:20,519
and use it to access the
API using a graphical user

386
00:21:20,519 --> 00:21:21,449
interface.

387
00:21:21,450 --> 00:21:25,589
The suite includes a number of
different tools such as a model

388
00:21:25,589 --> 00:21:29,728
training tool, a model
deployment tool, and a model

389
00:21:29,730 --> 00:21:31,649
monitoring tool.

390
00:21:31,650 --> 00:21:35,269
The model training tool helps
developers train ML models

391
00:21:35,269 --> 00:21:38,699
on their data using
different algorithms.

392
00:21:38,700 --> 00:21:42,650
The model deployment tool helps
developers deploy ML models

393
00:21:42,650 --> 00:21:48,390
to production with a number of
different deployment options.

394
00:21:48,390 --> 00:21:51,749
The model monitoring
tool helps developers

395
00:21:51,750 --> 00:21:54,509
monitor the performance
of their ML models

396
00:21:54,509 --> 00:21:58,678
in production using a
dashboard and a number

397
00:21:58,680 --> 00:22:01,809
of different metrics.

398
00:22:01,809 --> 00:22:04,499
Thank you for watching
our course, Introduction

399
00:22:04,500 --> 00:22:07,279
to Generative AI.

